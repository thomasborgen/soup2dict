name: test

on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.6", "3.7", "3.8", "3.9", "3.10"]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install poetry
      run: |
        curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/install-poetry.py | python -

    - name: Set up cache
      uses: actions/cache@v1
      with:
        path: .venv
        key: venv-${{ matrix.python-version }}-${{ hashFiles('poetry.lock') }}

    - name: Install dependencies
      run: |
        poetry config virtualenvs.in-project true
        poetry install

    - name: Run code quality checks
      run: |
        poetry check
        poetry run pip check
        poetry run flake8 .
        poetry run mypy .
        poetry run safety check --full-report
    - name: Run pytest
      run: |
        poetry run pytest .
    - name: Upload coverage to Codecov
      if: matrix.python-version == 3.8
      uses: codecov/codecov-action@v1
      with:
        file: ./coverage.xml
